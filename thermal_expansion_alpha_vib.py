from __future__ import division
import numpy as np
from scipy.integrate import quad

Na = 6.022140857*10**23
kB = 1.380649*10**(-23)
e = 1.602176620898*10**(-19)

def alpha_vib(a, r0, d, tD, tM):
    temperature = [0]
    result = [0]
    debye4 = lambda x: (x**4*np.exp(x))/((np.exp(x)-1)**2)
    debye5 = lambda x: (x**5*np.exp(x)*(1+np.exp(x)))/((np.exp(x)-1)**3)
    
    for t in np.arange(1.2, tM, 10):
        temperature.append(t)
        integrale_x = quad(debye4, 0, tD/t)[0]
        integrale_y = quad(debye5, 0, tD/t)[0]
        result.append(100000*(t/tD)**3*((((9*kB)/(2*e*a*r0*d))*integrale_x)+((9*kB**2*t)/(4*e**2*a*r0*d**2))*integrale_y))
                      
    return temperature, result


if __name__ == "__main__": 
     restst = [0, 0.177209097584900e-4, 0.144628124367907e-1, 0.984497312725671e-1, .312878186550386, .693570831525124, 1.21419373335021, 1.80625670825613, 2.40458337454782, 2.96735560949950, 3.47473661413186, 3.92128773794745, 4.30930607787930, 4.64452719914311, 4.93373973927472, 5.18360318340122, 5.40013868529155, 5.58856776452794, 5.75331722696516, 5.89809461005258, 6.02598622017554, 6.13955531571656, 6.24093091904101, 6.33188422301645, 6.41389257468963, 6.48819219848290, 6.55582127741516, 6.61765503366106, 6.67443421226378, 6.72678822099133, 6.77525398524902, 6.82029130815682, 6.86229545187136, 6.90160744476459, 6.93852258728880, 6.97329746188798, 7.00615576375436, 7.03729314591255, 7.06688126208833, 7.09507116975913, 7.12199618057247, 7.14777427346785, 7.17251014063579, 7.19629691586600, 7.21921766678021, 7.24134664299078, 7.26275038630748, 7.28348864690558, 7.30361519235708, 7.32317851929776, 7.34222243945487, 7.36078661562694, 7.37890703262436, 7.39661636672280, 7.41394438032299, 7.43091818943937, 7.44756256412894, 7.46390016270145, 7.47995172942972, 7.49573629877082, 7.51127135368671, 7.52657297877119, 7.54165598496262, 7.55653403769543, 7.57121975040357, 7.58572478714340, 7.60005994739230, 7.61423523260739, 7.62825992616962, 7.64214265123103, 7.65589141952680, 7.66951369250034, 7.68301641542789, 7.69640607247767, 7.70968870732815, 7.72286997386152, 7.73595515270511, 7.74894918922877, 7.76185671661807, 7.77468207278405, 7.78742933407595, 7.80010232607769, 7.81270463868102, 7.82523965834611, 7.83771055838567, 7.85012033927314, 7.86247182314161, 7.87476767184437, 7.88701039707379, 7.89920237140834, 7.91134583671361, 7.92344291233716, 7.93549560507726, 7.94750581027053, 7.95947532950573]
     restst = [np.round(r,3) for r in restst] ## compare just up to the third decimal
     print("flag1", restst)
     result = alpha_vib(1.14252739207463, 2.86106791103832, 0.563509849393325, 376.447744459516, 933)[1]
     result = [np.round(r,3) for r in result]
     print("flag2", result)
     assert result == restst
     print('passed')